<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="netflix_engine.mappers.EmployeeMapper">


    <resultMap id="employeeResult" type="Employee">
        <result property="personID" column="PersonId"/>
        <result property="lastName" column="LastName"/>
        <result property="firstName" column="FirstName"/>
        <result property="city" column="City"/>
        <result property="address" column="Address"/>
        <result property="state" column="State"/>
        <result property="zip" column="Zip"/>
        <result property="telephone" column="Telephone"/>
        <result property="ssn" column="SSN"/>
        <result property="startDate" column="StartDate"/>
        <result property="HourlyRate" column="HourlyRate"/>
        <result property="position" column="Position"/>
        <result property="password" column="Password"/>
    </resultMap>
    
    <resultMap id="customerResult" type="Customer">
        <result property="personID" column="PersonId"/>
        <result property="lastName" column="LastName"/>
        <result property="firstName" column="FirstName"/>
        <result property="city" column="City"/>
        <result property="address" column="Address"/>
        <result property="state" column="State"/>
        <result property="zip" column="Zip"/>
        <result property="telephone" column="Telephone"/>
        <result property="email" column="Email"/>
        <result property="password" column="Password"/>
        <result property="creditCard" column="CreditCard"/>
        <result property="rating" column="Rating"/>
    </resultMap>

    <resultMap id="movieResult" type="Movie">
        <result property="id" column="Id"/>
        <result property="movieType" column="MovieType"/>
        <result property="name" column="Name"/>
        <result property="fee" column="Fee"/>
        <result property="numCopies" column="NumCopies"/>
        <result property="rating" column="Rating"/>
        <result property="totalRating" column="TotalRating"/>
    </resultMap>
    
    <resultMap id="accountResult" type="Account">
        <result property="acctNum" column="AcctNum"/>
        <result property="acctType" column="AcctType"/>
        <result property="accountDate" column="AccountDate"/>
        <association property="customer" column="CustomerId" javaType="Customer" select="getCustomerById"/> 
    </resultMap>
    
    <resultMap id="orderResult" type="FuegoOrder">
    	<result property="orderId" column="OrderId"/>
    	<result property="movieId" column="MovieId"/>
    	<result property="customerId" column="CustomerId"/>
    	<result property="timeDate" column="TimeDate"/>
    	<result property="returnDate" column="ReturnDate"/>
    	<result property="employeeId" column="EmployeeId"/>
    	<result property="state" column="STATE"/>
   		<association property="movie" column="MovieID" javaType="Movie" select="getMovieById"/> 
    </resultMap>
    
<!-- ********************************************************************************************* -->

	<select id="getMovieById" resultMap="movieResult">
    	SELECT    * FROM Movie M
  		WHERE     M.Id = #{MovieId};
    </select>

    <select id = "getMail" resultMap = "customerResult" parameterType = "Customer" statementType = "CALLABLE">
	     {call Return_Customer_Mailing_List()}
    </select>
    
    <select id = "getAccount" resultMap = "accountResult" parameterType = "Account" statementType = "CALLABLE">
	     {call GetCustomerAccount(#{email})}
    </select>


	<insert id = "newCustomer" parameterType = "Customer" statementType = "CALLABLE">
	     {call AddCustomer( 
	     				   #{lastName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{firstName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{address,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{city,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{state,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{zip,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{telephone,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{email,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{creditCard,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{password,javaType=String,jdbcType=CHAR,mode=IN}
					       )}
    </insert>
    
    <insert id = "addEmployee" parameterType = "Employee" statementType = "CALLABLE">
	     {call AddEmployee( 
	     				   #{employee.lastName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.firstName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.address,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.city,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.state,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.zip,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.telephone,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.ssn,javaType=Integer,jdbcType=INTEGER,mode=IN} ,
					       #{employee.startDate,javaType=Date,jdbcType=DATE,mode=IN} ,
					       #{employee.HourlyRate,javaType=BigDecimal,jdbcType=DECIMAL,mode=IN} ,
					       #{employee.position,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.password,javaType=String,jdbcType=CHAR,mode=IN}
					       )}
    </insert>
    
    <update id = "editEmployee" parameterType = "Employee" statementType = "CALLABLE">
	     {call EditEmployee( 
	     				   #{employee.lastName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.firstName,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.address,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.city,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.state,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.zip,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.telephone,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.ssn,javaType=Integer,jdbcType=INTEGER,mode=IN} ,
					       #{employee.startDate,javaType=Date,jdbcType=DATE,mode=IN} ,
					       #{employee.HourlyRate,javaType=BigDecimal,jdbcType=DECIMAL,mode=IN} ,
					       #{employee.position,javaType=String,jdbcType=CHAR,mode=IN} ,
					       #{employee.password,javaType=String,jdbcType=CHAR,mode=IN}
					       )}
    </update>
    
    <delete id = "deleteEmployee" parameterType = "Employee">
      {call DelEmployee(#{SSN})}
   </delete>
	
	<insert id = "newAccount" parameterType = "Account" statementType = "CALLABLE">
	     {call Add_Account( 
	     				   #{accType,javaType=String,jdbcType=CHAR,mode=IN} ,
	     				   #{accDate,javaType=Date,jdbcType=CHAR,mode=IN},
					       #{customerId,javaType=String,jdbcType=CHAR,mode=IN}  
					       )}
    </insert>
    
    <insert id = "processOrder" parameterType = "FuegoOrder" statementType = "CALLABLE">
	     {call Add_Order( 
	     				   #{order.movieId,javaType=Integer,jdbcType=INTEGER,mode=IN} ,
	     				   #{order.customerId,javaType=String,jdbcType=CHAR,mode=IN},
					       #{order.employeeId,javaType=Integer,jdbcType=INTEGER,mode=IN}  
					       )}
    </insert>
    
    <insert id = "addMovie" parameterType = "Movie" statementType = "CALLABLE">
	     {call AddMovie( 
	     				   #{movie.name,javaType=String,jdbcType=CHAR,mode=IN} ,
	     				   #{movie.movieType,javaType=String,jdbcType=CHAR,mode=IN},
	     				   #{movie.numCopies,javaType=Integer,jdbcType=INTEGER,mode=IN},
	     				   #{movie.fee,javaType=BigDecimal,jdbcType=DECIMAL,mode=IN},
	     				   #{movie.totalRating,javaType=Integer,jdbcType=INTEGER,mode=IN}  
		 )}
    </insert>
    
    <update id = "editMovie" parameterType = "Movie" statementType = "CALLABLE">
	     {call EditMovie( 
	     				   #{movie.name,javaType=String,jdbcType=CHAR,mode=IN} ,
	     				   #{movie.movieType,javaType=String,jdbcType=CHAR,mode=IN},
	     				   #{movie.numCopies,javaType=Integer,jdbcType=INTEGER,mode=IN},
	     				   #{movie.fee,javaType=BigDecimal,jdbcType=DECIMAL,mode=IN},
	     				   #{movie.totalRating,javaType=Integer,jdbcType=INTEGER,mode=IN}  
		 )}
    </update>
    
    <delete id = "deleteMovie" parameterType = "Movie">
      {call DeleteMovie(#{name})}
   </delete>
    
    
    <delete id = "deleteFromQueue" parameterType = "Queued">
      DELETE from Queued 
      WHERE MovieId = #{movieId} AND AccountId = #{accountId};
   </delete>

    <select id = "getCustomers" resultMap = "customerResult">
      SELECT *
        FROM Customer
        INNER JOIN Person
        ON Customer.PersonId=Person.PersonId
    </select>
    
    <select id = "getBySSN" resultMap = "employeeResult">
      	SELECT *
        FROM Employee
        INNER JOIN Person
        ON Employee.PersonId=Person.PersonId
		WHERE Employee.SSN = #{SSN}
    </select>

  
    <select id = "getCustomerById" resultMap = "customerResult">
      SELECT *
        FROM Customer
        INNER JOIN Person
        ON Customer.PersonId=Person.PersonId
		WHERE Customer.Email = #{email}
    </select>
    
    <update id="updateCustomer">
    	UPDATE Customer
    	<set>
    	<if test= "customer.password !=null"> Password = #{customer.password},</if>
    	<if test= "customer.creditCard !=null"> CreditCard = #{customer.creditCard}</if>
    	</set>
    	WHERE Email = #{customer.email};
    
	</update>
	
	<update id="updateAccount">
    	UPDATE Account
    	<set>
    	<if test= "account.acctType !=null"> AcctType = #{account.acctType}</if>
    	</set>
    	WHERE CustomerId = #{account.customer.email};
    
	</update>
	
	<update id="updatePerson">
    	UPDATE Person
    	<set>
    	<if test= "customer.firstName !=null"> FirstName = #{customer.firstName},</if>
    	<if test= "customer.lastName !=null"> LastName = #{customer.lastName},</if>
    	<if test= "customer.address !=null"> Address = #{customer.address},</if>
    	<if test= "customer.zip !=null"> Zip = #{customer.zip},</if>
    	<if test= "customer.city !=null"> City = #{customer.city},</if>
    	<if test= "customer.state !=null"> State = #{customer.state},</if>
    	<if test= "customer.telephone != null"> Telephone = #{customer.telephone}</if>
    	</set>
    	WHERE PersonId = #{customer.personID};
    
	</update>
	
	<select id="getMovieByName" resultMap="movieResult">
    	SELECT    * FROM Movie M
  		WHERE     M.Name = #{name};
    </select>
    
    <select id="getAllAccounts" resultMap="accountResult">
    	SELECT    * FROM ACCOUNT
    </select>
    
    <select id="getAllMovies" resultMap="movieResult">
    	{call ALLMovies()}
    </select>
    
    <select id="getActiveEmployee" resultMap="employeeResult">
    	{call MostEmployeeTrans()}
    </select>
    
    <select id="getActiveUsers" resultMap="customerResult">
    	{call MostActiveUsers(#{limit})}
    </select>
    
    <select id="getActiveMovies" resultMap="movieResult">
    	{call MostActivelyRented(#{limit})}
    </select>
    
    <select id="getAllEmployees" resultMap="employeeResult">
    	SELECT * FROM Employee
        INNER JOIN Person
        ON Employee.PersonId=Person.PersonId;
    </select>
    
    <select id="getMailingList" resultMap="customerResult">
    	{call Return_Customer_Mailing_List()}
    </select>
    
    
    <select id="getOrdersByType" resultMap="orderResult">
    	SELECT F.* 
    	FROM FuegoOrder F, Movie M
    	WHERE F.MovieId = M.Id AND M.MovieType = #{type}
    </select>
    
    <select id="getOrdersByName" resultMap="orderResult">
    	SELECT F.* 
    	FROM FuegoOrder F, Movie M
    	WHERE F.MovieId = M.Id AND M.Name = #{name}
    </select>
    
    <select id="getOrdersByCustomerName" resultMap="orderResult">
    	SELECT F.* 
    	FROM FuegoOrder F, Customer C, Person P
    	WHERE C.PersonId = P.PersonId AND C.Email = F.CustomerId AND (P.FirstName = #{firstname} OR P.LastName = #{lastname})
    </select>
    
    
    
 </mapper>
