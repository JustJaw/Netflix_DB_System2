<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<mvc:default-servlet-handler/>

	<mvc:view-controller path="/" view-name="index"/>
	<mvc:view-controller path="/signup" view-name="signup"/>
	<mvc:view-controller path="/login" view-name="login"/>
	<mvc:view-controller path="/orders" view-name="orders"/>
	<mvc:view-controller path="/account" view-name="editacc"/>
	<mvc:view-controller path="/browse" view-name="browse"/>
  <mvc:view-controller path="/bestseller" view-name="bestseller"/>
  <mvc:view-controller path="/search" view-name="search"/>
  <mvc:view-controller path="/wishlist" view-name="wishlist"/>


	<mvc:view-controller path="/employee_login" view-name="employee_login"/>
	<mvc:view-controller path="/customer_queues" view-name="customer_queues"/>
	<mvc:view-controller path="/employee" view-name="employee"/>
  <mvc:view-controller path="/employee/customer_options" view-name="employee/customer_options"/>
  <mvc:view-controller path="/manager/employee_options" view-name="manager/employee_options"/>
  <mvc:view-controller path="/manager/movie_options" view-name="manager/movie_options"/>



    <context:component-scan base-package="netflix_engine" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  <property name="prefix" value="/resources/jsp/" />
	  <property name="suffix" value=".jsp" />
    </bean>


    <!--
	  Tells spring where our resouces for managing data is
    -->
    <mvc:resources mapping ="/resources/**" location="/resources/" />
    <mvc:annotation-driven />
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  <property name="driverClassName" value="com.mysql.jdbc.Driver" />

	  <!--
		This connects to our sql locally
	  -->
	  <property name="url" value="jdbc:mysql://localhost:3306/netflix_db?autoReconnect=true&amp;createDatabaseIfNotExist=true&amp;" />
	  <property name="username" value="root" />
	  <property name="password" value="hey" />
    </bean>


    <!--
	  This connects both our java mmappers and xml mappers to
	  the mysql server to start doing queries from there
    -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource" />
	  <property name="typeAliasesPackage" value="netflix_engine.model"/>
	  <property name="mapperLocations" value="classpath*:netflix_engine/mappers/*.xml" />
    </bean>

    <!--
	  This class allows us to create an sql session with mybatis
    -->

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--
	  Binds our base package with mybatis to find the files it needs
    -->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="netflix_engine.mappers" />
    </bean>

    <!--
	  jdbc configuration
    -->

    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
    </bean>

</beans>
